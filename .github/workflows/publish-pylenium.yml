# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Upload Pylenium Package

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'The version to publish to pypi'
        required: true
        default: 'develop'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      -
        name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      -
        name: Autobump version
        run: |
          # from refs/tags/v1.2.3 get 1.2.3
          VERSION=$(echo $GITHUB_REF | sed 's#.*/v##')
          PLACEHOLDER='__version__ = "develop"'
          VERSION_FILE='pylenium/__init__.py'
          # ensure the placeholder is there. If grep doesn't find the placeholder
          # it exits with exit code 1 and github actions aborts the build.
          grep "$PLACEHOLDER" "$VERSION_FILE"
          if [ ${{ github.events.inputs.version }} != "develop"]; then
            VERSION=${{ github.events.inputs.version }}
          fi
          sed -i "s/$PLACEHOLDER/__version__ = \"${VERSION}\"/g" "$VERSION_FILE"
        shell: bash
      -
        name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      -
        name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*